==717== Memcheck, a memory error detector
==717== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al.
==717== Using Valgrind-3.10.0 and LibVEX; rerun with -h for copyright info
==717== Command: ./TestCollatz
==717== 
Running main() from gtest_main.cc
[==========] Running 15 tests from 1 test case.
[----------] Global test environment set-up.
[----------] 15 tests from CollatzFixture
[ RUN      ] CollatzFixture.read_1
[       OK ] CollatzFixture.read_1 (24 ms)
[ RUN      ] CollatzFixture.read_2
[       OK ] CollatzFixture.read_2 (4 ms)
[ RUN      ] CollatzFixture.read_3
[       OK ] CollatzFixture.read_3 (4 ms)
[ RUN      ] CollatzFixture.eval_1
[       OK ] CollatzFixture.eval_1 (4 ms)
[ RUN      ] CollatzFixture.eval_2
[       OK ] CollatzFixture.eval_2 (2 ms)
[ RUN      ] CollatzFixture.eval_3
[       OK ] CollatzFixture.eval_3 (1 ms)
[ RUN      ] CollatzFixture.eval_4
[       OK ] CollatzFixture.eval_4 (2 ms)
[ RUN      ] CollatzFixture.eval_5
[       OK ] CollatzFixture.eval_5 (49 ms)
[ RUN      ] CollatzFixture.eval_6
[       OK ] CollatzFixture.eval_6 (9 ms)
[ RUN      ] CollatzFixture.eval_7
[       OK ] CollatzFixture.eval_7 (5 ms)
[ RUN      ] CollatzFixture.print_1
[       OK ] CollatzFixture.print_1 (8 ms)
[ RUN      ] CollatzFixture.print_2
[       OK ] CollatzFixture.print_2 (3 ms)
[ RUN      ] CollatzFixture.print_3
[       OK ] CollatzFixture.print_3 (3 ms)
[ RUN      ] CollatzFixture.solve_1
[       OK ] CollatzFixture.solve_1 (7 ms)
[ RUN      ] CollatzFixture.solve_2
[       OK ] CollatzFixture.solve_2 (21 ms)
[----------] 15 tests from CollatzFixture (174 ms total)

[----------] Global test environment tear-down
[==========] 15 tests from 1 test case ran. (229 ms total)
[  PASSED  ] 15 tests.
==717== 
==717== HEAP SUMMARY:
==717==     in use at exit: 72,704 bytes in 1 blocks
==717==   total heap usage: 275 allocs, 274 frees, 138,348 bytes allocated
==717== 
==717== LEAK SUMMARY:
==717==    definitely lost: 0 bytes in 0 blocks
==717==    indirectly lost: 0 bytes in 0 blocks
==717==      possibly lost: 0 bytes in 0 blocks
==717==    still reachable: 72,704 bytes in 1 blocks
==717==         suppressed: 0 bytes in 0 blocks
==717== Rerun with --leak-check=full to see details of leaked memory
==717== 
==717== For counts of detected and suppressed errors, rerun with: -v
==717== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
File 'Collatz.c++'
Lines executed:100.00% of 40
Branches executed:100.00% of 28
Taken at least once:85.71% of 28
Calls executed:100.00% of 13
Creating 'Collatz.c++.gcov'